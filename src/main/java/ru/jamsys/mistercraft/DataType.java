package ru.jamsys.mistercraft;

// Тип данных в таблице data на БД сервера
public enum DataType {
    //JSON data
    json,

    // Серверные данные нужны для обновления в runTime логики приклада без обновления приложения
    // К чисто серверным данным относятся:
    // Шаблоны
    // JS исходники
    // системная информация - например периоды синхронизации данных на устройстве
    template, // Владелец - сервер
    systemData, // Владелец - сервер

    // Это данные которые создались на устройстве и при условии авторизации будут синхронизоваться с БД сервера
    userDataRSync, //Владелец - пользователь

    // Сокетные данные немного кастомная история
    // Данные могут синхронизироваться без авторизации по uuid_device
    // Если указан parent_uuid_data - это значит, что данные хранятся у родителя,
    // а текущая запись - просто пустышка примазанная к устройству или пользователю
    // Это сделано для сокетных групп, когда несколько участников (разные учётки на разных устройствах)
    // хотят управлять одним состоянием - это данные value_data в таблице data на БД сервера
    // Запись в таблице data на сервере привязана к клиенту либо к устройству
    // Если такая запись будет одна для всех пользователей, то сломается стандартная логика синхронизации,
    // потому что при запросе на синхронизацию на сервер поступает максимальная доступная ревизия по сокетам у клиента
    // в свою очередь означает, что это личные данные клиента
    // Сервер будет отбирать в БД все записи, которые привязаны к пользователю или устройству
    // Если создатель сокетных данных будет другой человек, то просто нечего будет синхронизовать
    // При таких примазанных данных через parent_uuid будет обновляться содержимое пустышки и отдаваться клиенту,
    // как будто это реальные данные текущей записи
    socket, // Гибридный владелец

    //NOT JSON data
    js, // Владелец - сервер

    // Что-то другое, которое никак не подходит под существующие группы
    // На текущий момент таких данных вроде нет, получается задел на будущее
    any, // Владелец - сервер
    // Base64 large object
    blobRSync, //Владелец - пользователь
    // Base64 large object
    blob; // Владелец - сервер

    public boolean isUserData(String dataType) {
        return isUserData(DataType.valueOf(dataType));
    }

    public boolean isUserData(DataType dataType) {
        return dataType == DataType.userDataRSync || dataType == DataType.blobRSync;
    }

    public boolean isUserData() {
        return isUserData(this);
    }

}
